{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","_ref","perPage","total","onPageChange","currentPage","BUTTONS_COUNT","Math","ceil","isFirstPage","isLastPage","POST_NUMBERS","_jsxs","className","children","_jsx","cn","disabled","href","onClick","preventClickFirstPage","map","number","active","concat","page","preventClickLastPage","items","App","setCurrentPage","useState","setPerPage","lastPostPage","firstPostPage","currentPosts","slice","totalItems","length","finalItems","id","onChange","e","Number","target","value","selected","htmlFor","post","ReactDOM","render","document","getElementById"],"mappings":"4JAAO,SAASA,EAAWC,EAAcC,GACvC,MAAMC,EAAU,GAEhB,IAAK,IAAIC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIF,MAAMG,EAA8BC,IAKpC,IALqC,QAC1CC,EAAO,MACPC,EAAK,aACLC,EAAY,YACZC,GACDJ,EACC,MAAMK,EAAgBC,KAAKC,KAAKL,EAAQD,GAClCO,EAA8B,IAAhBJ,EACdK,EAAaL,IAAgBC,EAC7BK,EAAejB,EAAW,EAAGY,GAmBnC,OACEM,eAAA,MAAIC,UAAU,aAAYC,SAAA,CACxBC,cAAA,MAAIF,UAAWG,IAAG,YAAa,CAAEC,SAAUR,IAAeK,SACxDC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVK,KAAK,QACLC,QAbsBC,KACvBX,GACHL,EAAaC,EAAc,IAYvB,gBAAeI,EAAYK,SAC5B,WAIFH,EAAaU,KAAIC,GAChBP,cAAA,MACEF,UAAWG,IAAG,YAAa,CAAEO,OAAQD,IAAWjB,IAAeS,SAG/DC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVK,KAAI,IAAAM,OAAMF,GACVH,QAASA,KAxCEM,SAwCgBH,KAvCtBjB,GACXD,EAAaqB,IAsC4BX,SAElCQ,KAREA,KAYTP,cAAA,MAAIF,UAAWG,IAAG,YAAa,CAAEC,SAAUP,IAAcI,SACvDC,cAAA,KACE,UAAQ,WACRI,QA3CqBO,KACtBhB,GACHN,EAAaC,EAAc,IA0CvBQ,UAAU,YACVK,KAAK,QACL,gBAAeR,EAAWI,SAC3B,eCpEHa,EAAQjC,EAAW,EAAG,IAAI2B,KAAIvB,GAAC,QAAA0B,OAAY1B,KAEpC8B,EAAgBA,KAC3B,MAAOvB,EAAawB,GAAkBC,mBAAS,IACxC5B,EAAS6B,GAAcD,mBAAS,GAEjCE,EAAe3B,EAAcH,EAC7B+B,EAAgBD,EAAe9B,EAC/BgC,EAAeP,EAAMQ,MAAMF,EAAeD,GAC1CI,EAAaT,EAAMU,OACnBC,EAAapC,EAAUG,EAM7B,OACEO,eAAA,OAAKC,UAAU,YAAWC,SAAA,CACxBC,cAAA,MAAAD,SAAI,0BAEJF,eAAA,KAAGC,UAAU,OAAO,UAAQ,OAAMC,SAAA,CAAC,QAC3BT,EAAY,WAASH,EAAUG,EAAcH,EAAU,EAAE,KAAG,IACjEoC,GAAcF,EAAaA,EAAaE,EAAW,OAAKF,EAAW,OAGtExB,eAAA,OAAKC,UAAU,iBAAgBC,SAAA,CAC7BC,cAAA,OAAKF,UAAU,0BAAyBC,SACtCF,eAAA,UACE,UAAQ,kBACR2B,GAAG,kBACH1B,UAAU,eACV2B,SApB8DC,IACtEV,EAAWW,OAAOD,EAAEE,OAAOC,QAC3Bf,EAAe,IAkBsBf,SAAA,CAE7BC,cAAA,UAAQ6B,MAAM,IAAG9B,SAAC,MAClBC,cAAA,UAAQ8B,UAAQ,EAACD,MAAM,IAAG9B,SAAC,MAG3BC,cAAA,UAAQ6B,MAAM,KAAI9B,SAAC,OACnBC,cAAA,UAAQ6B,MAAM,KAAI9B,SAAC,YAIvBC,cAAA,SAAO+B,QAAQ,kBAAkBjC,UAAU,qBAAoBC,SAAC,sBAIlEC,cAACf,EAAU,CACTG,MAAOiC,EACPlC,QAASA,EACTG,YAAaA,EACbD,aAAeqB,GAAiBI,EAAeJ,KAEjDV,cAAA,MAAAD,SACGoB,EAAab,KAAI0B,GAChBhC,cAAA,MAAI,UAAQ,OAAMD,SAAEiC,YCzD9BC,IAASC,OAAOlC,cAACa,EAAG,IAAKsB,SAASC,eAAe,U","file":"static/js/main.17af03fd.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ninterface Props {\n  perPage: number;\n  total: number;\n  onPageChange: (e: number) => void;\n  currentPage: number;\n}\n\nexport const Pagination: React.FC<Props> = ({\n  perPage,\n  total,\n  onPageChange,\n  currentPage,\n}) => {\n  const BUTTONS_COUNT = Math.ceil(total / perPage);\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === BUTTONS_COUNT;\n  const POST_NUMBERS = getNumbers(1, BUTTONS_COUNT);\n  const handleClick = (page: number) => {\n    if (page !== currentPage) {\n      onPageChange(page);\n    }\n  };\n\n  const preventClickLastPage = () => {\n    if (!isLastPage) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  const preventClickFirstPage = () => {\n    if (!isFirstPage) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', { disabled: isFirstPage })}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          onClick={preventClickFirstPage}\n          aria-disabled={isFirstPage}\n        >\n          «\n        </a>\n      </li>\n      {POST_NUMBERS.map(number => (\n        <li\n          className={cn('page-item', { active: number === currentPage })}\n          key={number}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${number}`}\n            onClick={() => handleClick(number)}\n          >\n            {number}\n          </a>\n        </li>\n      ))}\n      <li className={cn('page-item', { disabled: isLastPage })}>\n        <a\n          data-cy=\"nextLink\"\n          onClick={preventClickLastPage}\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isLastPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42).map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n\n  const lastPostPage = currentPage * perPage;\n  const firstPostPage = lastPostPage - perPage;\n  const currentPosts = items.slice(firstPostPage, lastPostPage);\n  const totalItems = items.length;\n  const finalItems = perPage * currentPage;\n  const handleChangeSelect: React.ChangeEventHandler<HTMLSelectElement> = e => {\n    setPerPage(Number(e.target.value));\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        Page {currentPage} (items {perPage * currentPage - perPage + 1} -{' '}\n        {finalItems >= totalItems ? totalItems : finalItems} of {totalItems})\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={handleChangeSelect}\n          >\n            <option value=\"3\">3</option>\n            <option selected value=\"5\">\n              5\n            </option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        total={totalItems}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={(page: number) => setCurrentPage(page)}\n      />\n      <ul>\n        {currentPosts.map(post => (\n          <li data-cy=\"item\">{post}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}